import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {
  static int[] circularArrayRotation(int[] a, int k, int[] quaries){
      int[] result = new int[quaries.length];
      int[] b = new int[a.length];
      for(int i = 0; i < a.length; i++){
        b[(i + k) % a.length] = a[i];
      }
      for(int i = 0; i < quaries.length; i++){
        result[i]= b[quaries[i]];
      }
      return result;
  }
    public static void main(String[] args) throws IOException {
      Scanner scan = new Scanner(System.in);
      int n = scan.nextInt();
      int k = scan.nextInt();
      int q = scan.nextInt();
      int[] a = new int[n];
      int[] queries = new int[q];
      for(int i = 0; i < a.length; i++){
        a[i] = scan.nextInt();
      } 
      for(int j = 0; j < queries.length; j++){
        queries[j] = scan.nextInt();
      }
      int[] res = circularArrayRotation(a, k, queries);
      for(int i = 0; i < res.length; i++){
        System.out.println(res[i]);
      }
    }
}
